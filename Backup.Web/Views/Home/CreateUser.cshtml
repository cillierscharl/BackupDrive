@model Backup.Web.Models.CreateUserViewModel

@using (Ajax.BeginForm("CreateUser", "Home", new AjaxOptions() { UpdateTargetId = "createUserContainer", OnSuccess = "ReturnReload" }))
{

    
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title">Create New User</h4>
    </div>
     if (!Html.ViewData.ModelState.IsValid)
    {
    <div class="alert alert-danger">
        @Html.ValidationSummary()
    </div>
    }
    <div class="modal-body">
        <div class="form-group">
            @Html.LabelFor(m => m.Username)
            @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m=>m.UserRole)
            @Html.DropDownListFor(m=>m.UserRole,
            new SelectList(Model.UserRoles,"","Type"), new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m=>m.UserDataQuota)
            @Html.TextBoxFor(m=>m.UserDataQuota, new { @class = "form-control"})
        </div>
    </div>
    <div class="modal-footer">
        <a data-dismiss="modal" class="btn">Close</a>
        <input type="submit" value="Create" name="submit" class="btn btn-primary btn-large"/>
    </div>
    
    <script>
        function ReturnReload(result) {
            if (result.success) {
                location.reload();
                return;
            }
            $('#createUserContainer').html(result);

        }
    </script>

}

