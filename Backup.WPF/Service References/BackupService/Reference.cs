//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Backup.WPF.BackupService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BackupService.IBackupService")]
    public interface IBackupService {
        
        // CODEGEN: Generating message contract since the operation UploadFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupService/UploadFile", ReplyAction="http://tempuri.org/IBackupService/UploadFileResponse")]
        Backup.WPF.BackupService.UploadFileResponse UploadFile(Backup.WPF.BackupService.BackupStream request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupService/AuthenticateUser", ReplyAction="http://tempuri.org/IBackupService/AuthenticateUserResponse")]
        Backup.Domain.Models.UserDTO AuthenticateUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupService/GetUserFolders", ReplyAction="http://tempuri.org/IBackupService/GetUserFoldersResponse")]
        System.Collections.Generic.List<Backup.Domain.Models.BackupFolderDTO> GetUserFolders(string username, string systemIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupService/AddUserFolder", ReplyAction="http://tempuri.org/IBackupService/AddUserFolderResponse")]
        bool AddUserFolder(string username, string folderAbsolutePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupService/GetUsersAccounts", ReplyAction="http://tempuri.org/IBackupService/GetUsersAccountsResponse")]
        System.Collections.Generic.List<Backup.Domain.Models.UserAccountsDTO> GetUsersAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupService/CreateUser", ReplyAction="http://tempuri.org/IBackupService/CreateUserResponse")]
        bool CreateUser(Backup.Domain.Models.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupService/GetUserRoles", ReplyAction="http://tempuri.org/IBackupService/GetUserRolesResponse")]
        System.Collections.Generic.List<Backup.Domain.Models.UserTypeDTO> GetUserRoles();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BackupStream", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BackupStream {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Directory;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Name;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream DataStream;
        
        public BackupStream() {
        }
        
        public BackupStream(string Directory, string Name, string User, System.IO.Stream DataStream) {
            this.Directory = Directory;
            this.Name = Name;
            this.User = User;
            this.DataStream = DataStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBackupServiceChannel : Backup.WPF.BackupService.IBackupService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BackupServiceClient : System.ServiceModel.ClientBase<Backup.WPF.BackupService.IBackupService>, Backup.WPF.BackupService.IBackupService {
        
        public BackupServiceClient() {
        }
        
        public BackupServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BackupServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BackupServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BackupServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Backup.WPF.BackupService.UploadFileResponse Backup.WPF.BackupService.IBackupService.UploadFile(Backup.WPF.BackupService.BackupStream request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string Directory, string Name, string User, System.IO.Stream DataStream) {
            Backup.WPF.BackupService.BackupStream inValue = new Backup.WPF.BackupService.BackupStream();
            inValue.Directory = Directory;
            inValue.Name = Name;
            inValue.User = User;
            inValue.DataStream = DataStream;
            Backup.WPF.BackupService.UploadFileResponse retVal = ((Backup.WPF.BackupService.IBackupService)(this)).UploadFile(inValue);
        }
        
        public Backup.Domain.Models.UserDTO AuthenticateUser(string username, string password) {
            return base.Channel.AuthenticateUser(username, password);
        }
        
        public System.Collections.Generic.List<Backup.Domain.Models.BackupFolderDTO> GetUserFolders(string username, string systemIdentifier) {
            return base.Channel.GetUserFolders(username, systemIdentifier);
        }
        
        public bool AddUserFolder(string username, string folderAbsolutePath) {
            return base.Channel.AddUserFolder(username, folderAbsolutePath);
        }
        
        public System.Collections.Generic.List<Backup.Domain.Models.UserAccountsDTO> GetUsersAccounts() {
            return base.Channel.GetUsersAccounts();
        }
        
        public bool CreateUser(Backup.Domain.Models.UserDTO user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Collections.Generic.List<Backup.Domain.Models.UserTypeDTO> GetUserRoles() {
            return base.Channel.GetUserRoles();
        }
    }
}
